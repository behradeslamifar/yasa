#!/bin/bash

# This script is based on IOI organization request for control on USB connections 
# and devices. 
# Copyright (C) 2016 Behrad Eslamifar <b.eslamifar@cvak.ir> and IOI
# This is properitary software and cant freely distributed.
# 
# gmagr script for manage groups in yasa
# usage: hmgr <add|del|list> [arg]
#
# Version number (may use later)
version=0.1

# System variable
source /etc/default/yasa

function_select=$1
shift
arg="$@"

usage() {
    echo "Usage: hmgr <add|del|list> <arg>"

    return 0
}

log() {
    local severity=$1
    shift

    if [ -z "$severity" ] 
    then
	return 1
    elif [ "$severity" != "info"  -a  "$severity" != "warning" -a  "$severity" != "error" ]
    then
	return 1
    fi

    logger -p local0.$severity -t Yasa "$@"

    return 0
} # log

host_exist() {
    # local variables
    local hostid=$1

    [ -z $(grep "^$hostid:" $HOSTFILE ) ] && return 1

    return 0
} # host_exist

host_add() {
    # befor run this function must validate hostname and existance
    # second validate hostname: a-z,0-9,-,.
    if [ -z "$1" ]
    then
	return 1
    elif [ -z "$(echo "$1" | grep "^\([a-z0-9][a-z0-9-]\+\.\)\+[a-z0-9]\+")$" ]
    then
	return 1
    fi

    # add to /etc/yasa/host
    echo "$1:0" >> $HOSTFILE

    return 0
} # host_add

host_delete() {
    # not need impelement, only add to no group

    return 0
}

host_list() {
    grep -v "^#" $HOSTFILE | cut -f 1 -d ":"

    return 0
}

host_deploy_stat() {
    # local variables
    local hostid=$1

    [ -z "$hostid" ] && return 1

    if [  "$(cat $HOSTFILE | grep "^$hostid" | cut -f 2 -d ":")" = "0" ]
    then
	echo "0"
	return 0
    else
	echo "1"
	return 1
    fi
} # host_deploy_stat

host_toggle_stat() {
    # local variables
    local hostid=$1
    local stat=$1

    [ -z "$hostid" ] && return 1
    [ -z "$stat" -o -z "$(echo $stat | grep "0\|1")" ] && return 1

    sed -i "s/^$hostid:[01]$/$hostid:$stat/" $HOSTFILE

    return 0
} # host_toggle_stat

case $function_select in
    add) host_add $arg || exit 1
	;;
    del) host_delete $arg || exit 1
	;;
    list) host_list 
	;;
    stat) host_deploy_stat $arg || exit 1
	;;
    toggle) host_toggle_stat $arg || exit 1
	;;
    exist) host_exist $arg || exit 1
	;;
esac

exit 0
